name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

# Grant GITHUB_TOKEN the permissions required for Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt, clippy
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev libglib2.0-dev libgtk-3-dev libwebkit2gtk-4.0-dev
    
    - name: Run tests
      run: cargo test --verbose
    
    - name: Run iroh tests
      run: cargo test --features iroh --verbose
      
    - name: Run all tests with all features
      run: cargo test --all --all-features --verbose
    
    - name: Run MVP test
      run: make mvp-test
    
    - name: Run headless tests
      run: cargo test --features "iroh,headless" --verbose
      
    - name: Run integration tests
      run: |
        cd network
        cargo test --test duplicate_delivery --features iroh -- --nocapture
        cargo test --test ack_timeout --features iroh -- --nocapture
        cargo test --test relay_limits --features iroh -- --nocapture
        cargo test --test snapshot_cadence --features iroh -- --nocapture
        cargo test --test property_reorder -- --nocapture
    
    - name: Check formatting
      run: cargo fmt -- --check
    
    - name: Run clippy
      run: cargo clippy -- -D warnings

  build:
    name: Build
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev libglib2.0-dev libgtk-3-dev libwebkit2gtk-4.0-dev
    
    - name: Build
      run: cargo build --verbose
    
    - name: Build with iroh
      run: cargo build --features iroh --verbose

  cross-platform:
    name: Cross Platform
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev libglib2.0-dev
    
    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Windows typically has the necessary dependencies
        echo "No additional dependencies needed for Windows"
    
    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install pkg-config glib gtk+3
        echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/opt/homebrew/lib/pkgconfig:$PKG_CONFIG_PATH" >> $GITHUB_ENV
    
    - name: Build core
      run: cargo build -p p2pgo-core --verbose
    
    - name: Test core
      run: cargo test -p p2pgo-core --verbose
